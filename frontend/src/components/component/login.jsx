/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/fxhAqAw29GO
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
// src/components/component/login.jsx

'use client'; // Marca este archivo como un componente de cliente

import { Dashboard } from "@/components/component/dashboard"; // Importar el componente Dashboard

import { useState, useEffect } from "react";
import { useRouter } from 'next/navigation'; // Hook de Next.js para la navegación
import axios from 'axios';
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";

export function Login() {
  const [textname, setTextName] = useState("");
  const [textpassword, setTextPassword] = useState("");
  const [error, setError] = useState("");
  const router = useRouter(); // Usar el hook de Next.js para la navegación

  useEffect(() => {
    // Eliminar la cookie cuando el componente Login se monta
    document.cookie = "access_token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;";
    console.log('Token eliminado al regresar al login');
  }, []);

  function handleTextName(event) {
    setTextName(event.target.value);
  }

  function handleTextPassword(event) {
    setTextPassword(event.target.value);
  }

  async function handleLogin(event) {
    event.preventDefault();
    try {
      const response = await axios.post('http://localhost:8000/api/login/', {
        usuario: textname,
        contrasena: textpassword,
      }, { withCredentials: true });

      const { token, expires_at } = response.data;

      console.log('Token:', token);
      console.log('Expira en:', expires_at);

      document.cookie = `access_token=${token}; expires=${expires_at}; path=/;`;
      console.log('Token guardado en cookie');

      router.push('/dashboard');
      
    } catch (error) {
      setError("Error al iniciar sesión. Verifique sus credenciales y vuelva a intentarlo.");
      console.error('Error during login:', error);
    }
  }

  return (
    <div className="flex items-center justify-center min-h-screen bg-background">
      <div className="mx-auto max-w-sm space-y-6 p-6 rounded-lg shadow-lg bg-card">
        <div className="space-y-2 text-center">
          <h1 className="text-3xl font-bold text-card-foreground">Ingreso al sistema</h1>
          <p className="text-muted-foreground">Introduzca su nombre de usuario y contraseña para iniciar sesión.</p>
        </div>
        <form onSubmit={handleLogin} className="space-y-4">
          <div className="space-y-2">
            <Label htmlFor="username" className="text-card-foreground">
              Username
            </Label>
            <Input
              id="username"
              type="text"
              placeholder="Ingrese su usuario"
              required
              value={textname}
              onChange={handleTextName}
              className="bg-muted text-card-foreground placeholder:text-muted-foreground focus:ring-primary focus:border-primary"
            />
          </div>
          <div className="space-y-2">
            <Label htmlFor="password" className="text-card-foreground">
              Password
            </Label>
            <Input
              id="password"
              type="password"
              placeholder="Ingrese su contraseña"
              required
              value={textpassword}
              onChange={handleTextPassword}
              className="bg-muted text-card-foreground placeholder:text-muted-foreground focus:ring-primary focus:border-primary"
            />
          </div>
          {error && <p className="text-red-500">{error}</p>}
          <Button
            type="submit"
            className="w-full bg-primary text-primary-foreground hover:bg-primary/90 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring">
            Sign In
          </Button>
        </form>
      </div>
    </div>
  );
}
